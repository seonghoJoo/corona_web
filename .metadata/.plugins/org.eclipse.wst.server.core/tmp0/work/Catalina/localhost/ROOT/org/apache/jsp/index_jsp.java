/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.59
 * Generated at: 2020-12-14 11:35:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.corona.vo.Trip;
import org.corona.dao.TripDAO;
import java.util.List;
import org.corona.vo.PageVO;
import org.corona.util.PaginateUtil;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/template/footer.jsp", Long.valueOf(1607824747014L));
    _jspx_dependants.put("/WEB-INF/template/link.jsp", Long.valueOf(1607824747012L));
    _jspx_dependants.put("/WEB-INF/template/header.jsp", Long.valueOf(1607824747016L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.corona.util.PaginateUtil");
    _jspx_imports_classes.add("org.corona.vo.Trip");
    _jspx_imports_classes.add("org.corona.vo.PageVO");
    _jspx_imports_classes.add("org.corona.dao.TripDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");


	int pageNo = 1;
	String pageStr = request.getParameter("pageNo");
	try{
		pageNo = Integer.parseInt(pageStr);
	}catch(Exception e){
		e.printStackTrace();	
	}
	
	int total = TripDAO.selectTotal(); 
	int numPage = 5;	
	int numBlock = 3; // 블록 개수
	
	String url = "/index.jsp"; // 페이지 주소
	String param = "pageNo=";
	String paginate = PaginateUtil.getPaginate(pageNo,
	        total,
	        numPage,
	         numBlock,
	         url,
	         param);
	
	PageVO pageVO = new PageVO(pageNo,numPage);
	
	List<Trip> trips = TripDAO.selectList(pageVO);	
	// 1페이지가 아니고 만약 글이 없으면 1페이지로 이동
	if(pageNo!= 1 && trips.isEmpty()){
		response.sendRedirect("/index.jsp?pageNo=1");
	}//if end

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta charset=\"utf-8\">\r\n");
      out.write("\t\t<title>확진자 방문 장소 리스트</title>\r\n");
      out.write("\t\t<!-- index.html, writeForm.html의 공통된 CSS를 default.css에 -->\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/reset.css\"/>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/all.min.css\"/>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/notosanskr.css\"/>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/default.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/paginate.css\" />\r\n");
      out.write("<link rel=\"icon\" href=\"/favicon.png\"/>\r\n");
      out.write("<script src=\"/js/jquery.js\"></script>\r\n");
      out.write("<script src=\"/js/moment-with-locales.js\"></script>");
      out.write("\r\n");
      out.write("\t \t<link rel=\"stylesheet\" href=\"/css/index.css\" /> \r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"wrap\">\r\n");
      out.write("\t<div id=\"header\">\r\n");
      out.write("\t\t<h1><a href=\"/\"><i class=\"fas fa-list\"></i> 코로나 확진자 리스트</a></h1>\r\n");
      out.write("\t</div><!-- //#header  -->\r\n");
      out.write("\r\n");
      out.write("<div id=\"content\">\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t");
if(trips.size() == 0){ 
      out.write("\r\n");
      out.write("\t\t\t\t<li class=\"no\"><i class=\"fas fa-times-circle\"></i> 확진자가 없습니다.</li>\r\n");
      out.write("\t\t\t\t");

				}else{
					
				for(Trip trip : trips){
				
      out.write("\r\n");
      out.write("\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t\t<h3>\r\n");
      out.write("\t\t\t\t\t\t<strong>\r\n");
      out.write("\t\t\t\t\t\t\t<i class=\"fas fa-");
      out.print(trip.getMask()=='M'?"check":"times");
      out.write("\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(trip.getGu() );
      out.write(" 확진자\r\n");
      out.write("\t\t\t\t\t\t</strong>\r\n");
      out.write("\t\t\t\t\t\t<time><i class=\"fas fa-clock\"></i>\r\n");
      out.write("\t\t\t\t\t\t");
      out.print( trip.getRegdate() );
      out.write("</time>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/delete.do?no=");
      out.print(trip.getNo() );
      out.write("\" class=\"delete btn\" data-gu=\"");
      out.print(trip.getGu() );
      out.write("\" data-num=\"");
      out.print(trip.getNum());
      out.write("\"><i class=\"far fa-trash-alt\"></i> 삭제</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/editForm.jsp?no=");
      out.print(trip.getNo() );
      out.write("\" class=\"update btn\"><i class=\"far fa-edit\"></i> 수정</a>\r\n");
      out.write("\t\t\t\t\t</h3>\r\n");
      out.write("\t\t\t\t\t<p>");
      out.print( trip.getPlace() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t\t<p>");
      out.print( trip.getCity() + trip.getGu() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t\t<p>");
      out.print( trip.getStartMonth());
      out.write('월');
      out.write(' ');
      out.print(trip.getStartDay());
      out.write("일 ~ ");
      out.print( trip.getEndMonth());
      out.write('월');
      out.write(' ');
      out.print(trip.getEndDay());
      out.write("일</p>\r\n");
      out.write("\t\t\t\t\t<p id=\"time\"></p>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t");
} }
      out.write("\r\n");
      out.write("\t\t\t\t</ul><!-- #// ul end -->\r\n");
      out.write("\t\t\t\t<div class=\"btn_box\">\r\n");
      out.write("\t\t\t\t\t<a class=\"btn\" href=\"/writeForm.jsp\"><i class=\"fas fa-pencil-alt\"></i> 글쓰기</a>\r\n");
      out.write("\t\t\t\t\t<a class=\"btn\" href=\"/logout.bmj\"><i class=\"fas fa-door-open\"></i> 로그아웃</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");
      out.print( paginate);
      out.write("\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("</div><!--  //#content  -->\r\n");
      out.write("\t\t\r\n");
      out.write("<div id=\"footer\">\r\n");
      out.write("\t&copy;2020 Corona.org\r\n");
      out.write("</div><!-- // #footer  -->\r\n");
      out.write("</div><!-- //#wrap  -->");
      out.write("\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t// confirm 창을 써야한다!!\r\n");
      out.write("\t\t$('.delete').on(\"click\",function () {\r\n");
      out.write("\t\t   \t\r\n");
      out.write("\t\t    //const no = $(this).attr(\"data-car-type\");\r\n");
      out.write("\t\t    const no = $(this).attr(\"data-num\");\r\n");
      out.write("\t\t    const gu = $(this).attr(\"data-gu\");\r\n");
      out.write("\t\t    //const name = $(this).data('num');\r\n");
      out.write("\t\t\t if (confirm(gu+\" \"+ no+\"번째 확진자를 정말로 삭제하시겠습니까??\") == true){    //확인\r\n");
      out.write("\t\t\t     document.removefrm.submit();\r\n");
      out.write("\t\t\t }else{   //취소\r\n");
      out.write("\t\t\t     return false;\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\tconsole.log(no);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
